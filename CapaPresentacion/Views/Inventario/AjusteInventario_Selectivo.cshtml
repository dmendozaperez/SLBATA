@{
    ViewBag.Title = "Ajuste de Inventario Selectivo";
}
<link href="~/ContentSelect/bootstrap-select.css" rel="stylesheet" />
<link href="@Url.Content("~/Content/bootstrap-select.min.css")" rel="stylesheet" type="text/css" />
<style>
    .boton-td {
        padding-top: 3px !important;
        padding-bottom: 3px !important;
    }

    .modal-body {
        max-height: calc(100vh - 212px);
        overflow-y: auto;
    }

    .content-center-text {
        text-align: center;
    }

    .dataTables_processing {
        position: absolute;
        top: 50%;
        left: 50%;
        width: 100%;
        height: 40px;
        margin-left: -50%;
        margin-top: -25px;
        padding-top: 20px;
        text-align: center;
        font-size: 1.3em;
        background-color: white;
        font-weight: bold;
        color: #3d566e;
        background: -webkit-gradient(linear, left top, right top, color-stop(0%, rgba(255,255,255,0)), color-stop(25%, rgba(255,255,255,0.9)), color-stop(75%, rgba(255,255,255,0.9)), color-stop(100%, rgba(255,255,255,0)));
        background: -webkit-linear-gradient(left, rgba(255,255,255,0) 0%, rgba(255,255,255,0.9) 25%, rgba(255,255,255,0.9) 75%, rgba(255,255,255,0) 100%);
        background: -moz-linear-gradient(left, rgba(255,255,255,0) 0%, rgba(255,255,255,0.9) 25%, rgba(255,255,255,0.9) 75%, rgba(255,255,255,0) 100%);
        background: -ms-linear-gradient(left, rgba(255,255,255,0) 0%, rgba(255,255,255,0.9) 25%, rgba(255,255,255,0.9) 75%, rgba(255,255,255,0) 100%);
        background: -o-linear-gradient(left, rgba(255,255,255,0) 0%, rgba(255,255,255,0.9) 25%, rgba(255,255,255,0.9) 75%, rgba(255,255,255,0) 100%);
        background: linear-gradient(to right, rgba(255,255,255,0) 0%, rgba(255,255,255,0.9) 25%, rgba(255,255,255,0.9) 75%, rgba(255,255,255,0) 100%);
    }
</style>
<script src="~/Scripts/bootstrap-select.min.js"></script>
<script src="@Url.Content("~/Scripts/bootstrap.min.js")"></script>
<script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.7.7/xlsx.core.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/xls/0.7.4-a/xls.core.min.js"></script>
<div class="box box-body box-primary">
    <div class="row">
        <div class="col-sm-10">
            <a href="@Url.Action("ListaAjustes_Selectivo" , "Inventario")" class="btn btn-default" title="Salir"><i class="fa fa-long-arrow-left"></i>&nbsp;&nbsp;Salir</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
            <button type="button" onclick="NuevoGrabar();" class="btn btn-success"><i class="glyphicon glyphicon-floppy-disk" title="Ajustar inventario"></i>&nbsp;&nbsp;Ajustar Stock</button>
        </div>
    </div>
    <br />
    <div class="form-horizontal">
        <div class="form-group form-group">
            <label class="col-md-2 control-label" for="txtCodigo">Codigo:</label>
            <div class="col-md-2">
                @Html.TextBox("codigo", "", new { @class = "form-control", @id = "codigo", @readonly = "readonly" })
            </div>
        </div>
        <div class="form-group form-group">
            <label class="col-md-2 control-label" for="txtCodigo">Descripcion:</label>
            <div class="col-md-4">
                @Html.TextArea("descripcion", "", new { @class = "form-control", @id = "descripcion" })
            </div>
        </div>
        <div class="form-group form-group">
            <label class="col-md-2 control-label" for="tienda">Tienda:</label>
            <div class="col-md-3">
                @Html.DropDownList("tienda", new MultiSelectList(ViewBag.tienda, "cod_entid", "des_entid", null), new { @class = "form-control selectpicker", @id = "tienda", @data_live_search = "true", @data_actions_box = "true", @onchange = "" })
            </div>
        </div>
        <div class="form-group">
            <label class="col-md-2 control-label" for="fecha">Fecha:</label>
            @*<div class="col-md-3">
                    <div id="datepicker" style="width:100%" class="input-group date">
                        <input type="text" name="fecha" class="form-control" value="" id="fecha">
                        <span class="input-group-addon bg-white disabled" id="btdp"><img src="~/Content/images/wall-calendar-with-lines.svg" height="20" width="20"></span>
                    </div>
                </div>*@
            <div class="col-md-3">
                <div class="input-group">
                    <input type="text" name="fecha" id="fecha" class="form-control " placeholder="dd-mm-aaaa" style="height: 32.979166px;">
                    <span class="input-group-btn">
                        <button class="btn btn-default" id="btdp" type="button"><i class="glyphicon glyphicon-calendar"></i></button>
                    </span>
                </div><!-- /input-group -->
            </div>
            <div class="col-md-offset-0 col-md-2 "><button type="button" id="corteInventario" class="btn btn-warning"><i class="fa fa-cut"></i>&nbsp;&nbsp;Corte de Inventario</button></div>
        </div>
        <div class="form-group form-group">
            <label class="col-md-2 control-label" for="ddlAtributo">Cargar Excel:</label>
            <div class="col-md-3">
                <input type="file" id="excelFile" disabled accept=".xlsx">
                @*@Html.DropDownList("ddlAtributo", null, new { @class = "form-control selectpicker", @id = "ddlAtributo", @data_live_search = "true" })*@
            </div>
        </div>
    </div>
    <br />
    <div class="row">
        <div class="col-md-5" id="resumen">

        </div>
    </div>
    <div class="row">
        <div class="col-md-7">
            <table class="table table-condensed table-bordered">
                <thead>
                    <tr style="background-color:#3d566e; color:#ecf0f1;padding-top: 0px;padding-bottom: 0px;">
                        <th>Codigo</th>
                        <th>Calidad</th>
                        <th>Medida</th>
                        <th>Fisico</th>
                        <th>Teorico</th>
                        <th>Diferencia</th>
                    </tr>
                </thead>
                <tbody data-bind="foreach:"></tbody>
                <tfoot>
                    <tr>
                        <th>Codigo</th>
                        <th>Calidad</th>
                        <th>Medida</th>
                        <th>Fisico</th>
                        <th>Teorico</th>
                        <th>Diferencia</th>
                    </tr>
                </tfoot>
            </table>
        </div>
    </div>

</div>
<script>
    var corteInventario = false;
    $(document).ready(function () {
        $('input[type="file"]').change(function () {
            ExportToTable();
        });
        $("#btdp").click(function () {
            $("#fecha").datepicker('show')
        });
        $('#fecha').datepicker({
            format: "dd-mm-yyyy",
            autoclose: true,
            maxDate: new Date(),
        }).datepicker("setDate", "0");
        $('.table').DataTable({
            "language": {
                "url": "../Scripts/DataTables/Spanish.json",
                //"bProcessing" : '<div class="spinner"></div>'
            },
            "columnDefs": [{
                "targets": 1,
                "orderable": false
            }],
            "bProcessing": true,
            "bServerSide": true,
            "bAutoWidth": false,
            "sAjaxSource": '@Url.Action("getInvArt_SelectivoAjax", "Inventario")',
            "fnServerParams": function (aoData) {
                aoData.push({ "name": "corteInventario", "value": corteInventario },
                    { "name": "tienda", "value": $("#tienda").val() },
                    { "name": "fecha", "value": $("#fecha").val() });
            },
            "bdestroy": true,
            "start": 0,
            //"order": [0, "desc"],
            "bDeferRender": true,
            "aoColumns": [
                    { "sName": "ARTICULO", "mData": "ARTICULO", "className": "content-center-text" },
                    { "sName": "CALIDAD", "mData": "CALIDAD", "className": "content-center-text" },
                    { "sName": "MEDIDA", "mData": "MEDIDA", "className": "content-center-text" },
                    { "sName": "STOCK", "mData": "STOCK", "className": "content-center-text" },
                    { "sName": "TEORICO", "mData": "TEORICO", "className": "content-center-text" },
                    { "sName": "DIFERENCIA", "mData": "DIFERENCIA", "className": "content-center-text" },
            ]
        });
        $("#corteInventario").click(function () {
            waitingDialog.show('Espere un momento por favor');
            corteInventario = true;
            $('.table').DataTable().ajax.reload(function () {
                Resumen(false);
                $("#tienda").prop('disabled', true);
                $("#fecha").prop('disabled', true);
                $("#btdp").attr('disabled', true);
                $("#excelFile").prop('disabled', false);
                waitingDialog.hide();
            });
            corteInventario = false;

        });
        Resumen(true);
    });

    function EnviarArticulosExcel(jsonExcel) {
        waitingDialog.show('Espere un momento por favor');
        $.ajax({
            type: "POST",
            url: '@Url.Action("JsonExcelArticulos_Selectivo", "Inventario")',
            data: { articulos: JSON.stringify(jsonExcel) },
            dataType: "json",
            success: function (data) {
                if (data.estado == 1) {
                    ordenar = false;
                    $('.table').DataTable().ajax.reload(function () { Resumen(false); waitingDialog.hide(); });
                } else {
                    waitingDialog.hide();
                    swal({
                        title: "Error",
                        text: data.resultados,
                        icon: "error",
                        dangerMode: true,
                    });
                    $('#excelFile').val("");
                }
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                waitingDialog.hide();
                var error = eval("(" + XMLHttpRequest.responseText + ")");
                swal(error.Message);
                $('#excelFile').val("");
            }
        });
    }

    function ExportToTable() {
        try {
            var regex = /\.(xls[mx]?)$/;
            /*Checks whether the file is a valid excel file*/
            if (regex.test($("#excelFile").val().toLowerCase())) {
                var xlsxflag = false; /*Flag for checking whether excel is .xls format or .xlsx format*/
                if ($("#excelFile").val().toLowerCase().indexOf(".xlsx") > 0) {
                    xlsxflag = true;
                }
                /*Checks whether the browser supports HTML5*/
                if (typeof (FileReader) != "undefined") {
                    var reader = new FileReader();
                    reader.onload = function (e) {
                        var data = e.target.result;
                        /*Converts the excel data in to object*/
                        if (xlsxflag) {
                            var workbook = XLSX.read(data, { type: 'binary' });
                        }
                        else {
                            var workbook = XLS.read(data, { type: 'binary' });
                        }
                        /*Gets all the sheetnames of excel in to a variable*/
                        var sheet_name_list = workbook.SheetNames;

                        var cnt = 0; /*This is used for restricting the script to consider only first sheet of excel*/
                        sheet_name_list.forEach(function (y) { /*Iterate through all sheets*/
                            /*Convert the cell value to Json*/
                            if (xlsxflag) {
                                var exceljson = XLSX.utils.sheet_to_json(workbook.Sheets[y]);
                            }
                            else {
                                var exceljson = XLS.utils.sheet_to_row_object_array(workbook.Sheets[y]);
                            }
                            if (exceljson.length > 0 && cnt == 0) {
                                EnviarArticulosExcel(exceljson);
                            }
                            //ret_exceljson = exceljson;
                        });
                        //$('#exceltable').show();
                    }
                    if (xlsxflag) {/*If excel file is .xlsx extension than creates a Array Buffer from excel*/
                        reader.readAsArrayBuffer($("#excelFile")[0].files[0]);
                    }
                    else {
                        reader.readAsBinaryString($("#excelFile")[0].files[0]);
                    }
                }
                else {
                    swal("Tu navegador no soporta HTML5");
                }
            }
            else {
                swal("Por favor selecciona un archivo excel *xlsx");
            }
        } catch (e) {
            swal("Error al cargar archivo excel.");
        }
    }
    function NuevoGrabar() {
        var _titulo = "";
        swal({
            title: "Ajustar Inventario",
            text: "¿Desea ajustar el inventario?",
            icon: "warning",
            buttons: true,
            dangerMode: true,
        })
       .then((cambiar) => {
           if (cambiar) {
               var tienda = $("#tienda").val();
               var descripcion = $("#descripcion").val();
               var fecha = $("#fecha").val();

               waitingDialog.show('Espere un momento por favor');
               $.ajax({
                   type: "POST",
                   url: '@Url.Action("Ins_Inventario_Selectivo", "Inventario")',
                   data: { cod_tda: tienda, inv_des: descripcion, inv_fec_inv: fecha},
                   dataType: "json",
                   success: function (data) {
                       waitingDialog.hide();
                       if (data.estado == 1) {
                           swal({
                               title: "OK",
                               text: data.mensaje + "\n" + "Total Físico: " + data.tot_fisico + "\n" + "Total Teorico: " + data.tot_teorico + "\n" + "Total Actual: " + data.tot_actual,
                               icon: "success"
                           }).then((value) => {
                               window.location.href = "@Url.Action("ListaAjustes_Selectivo", "Inventario")";
                           });
                       } else {
                           swal({
                               title: "Error",
                               text: data.mensaje,
                               icon: "error",
                               dangerMode: true,
                           });
                       }
                   },
                   error: function (XMLHttpRequest, textStatus, errorThrown) {
                       waitingDialog.hide();
                       var error = eval("(" + XMLHttpRequest.responseText + ")");
                       swal(error.Message);
                   }
               });
           }
       });
    }
    function Resumen(dialog) {
        if (dialog == true) {
            waitingDialog.show('Espere un momento por favor');
        }
        $("#resumen").html("");
        $.ajax({
            type: "POST",
            url: '@Url.Action("getResumen_Selectivo", "Inventario")',
            data: null,
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            async: true,
            success: function (resultado) {
                if (dialog == true) {
                    waitingDialog.hide();
                }
                if (resultado.estado == 1) {
                    resumen = '<div class="panel panel-primary p-10">' +
                               '<div class="panel-body"  style="padding-top: 7px;padding-bottom: 4px;">' +
                               '<h5 class="text-bold text-info">Resumen</h5>' +
                               '<p><span class="label label-primary" style="font-size:14px"><b>Teorico:</b><small class="text-right">&nbsp;' + resultado.tot_teorico + '</small>' +
                                '</span>&nbsp;&nbsp;<span class="label label-success" style="font-size:14px"><b>Físico:</b><small class="text-right">&nbsp;' + resultado.tot_fisico + '</small>' +
                                '</span>&nbsp;&nbsp;<span class="label label-danger" style="font-size:14px"><b>Deferencia:</b><small class="text-right">&nbsp;' + resultado.tot_diferencia + '</small></span></p>' +
                    '</div></div>';
                }
                $("#resumen").html(resumen)
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) { // función que va a ejecutar si hubo algún tipo de error en el pedido
                var error = eval("(" + XMLHttpRequest.responseText + ")");
                alert(error.Message);
                waitingDialog.hide();
                if (dialog == true) {
                    waitingDialog.hide();
                }
            }
        });
    }

</script>